(()=>{"use strict";var e={};function t(e,t){const r=document.getElementById("messageContainer");let n=document.createElement("div");n.className=`message__element ${e}`,n.innerHTML=t,r.append(n),setTimeout((()=>n.remove()),5e3)}function r(e,t){let r=document.createElement("div");r.className="productCard",r.dataset.productId=e.id,r.innerHTML=`<button class="btn btn--delete">Delete product</button>\n    <div class="productCard__imgContainer">\n      <img class="productCard__img" src="${e.image}" alt="image">\n\n    </div>\n    <div class="productCard__info">\n      <h3 class="productCard__title">${e.title}</h3>\n      <p class="productCard__category">${e.category}</p>\n      <p class="productCard__price">${e.price}</p>\n    </div>`,t.appendChild(r)}e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var r=e.g.document;if(!t&&r&&(r.currentScript&&"SCRIPT"===r.currentScript.tagName.toUpperCase()&&(t=r.currentScript.src),!t)){var n=r.getElementsByTagName("script");if(n.length)for(var o=n.length-1;o>-1&&(!t||!/^http(s?):/.test(t));)t=n[o--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();const n=document.getElementById("product-list");let o=[],a="";function c(e,t){let c;n.innerHTML="",a=t,c=""!==t?o.filter((r=>r[e]===t)):o,c.forEach((e=>r(e,n)))}n.addEventListener("click",(e=>{if("Delete product"===e.target.innerHTML){let r=e.target.parentNode.dataset.productId;(async function(e){let r=`https://fakestoreapi.com/products/${e}`;try{console.log(`Sending fetch request for deleting product ${e}`);let n=await fetch(r,{method:"DELETE"});if(!n.ok)throw new Error("Network problem when deleting product");let o=await n.json();if(null===o)throw console.dir(o),new Error("No product in database");return console.log(o.id,e),o.id==e&&t("success",`Product: ${o.title} successfully deleted from database`),console.log(`Received result of deleting product ${o.title}`),console.dir(o),o}catch(e){t("error","Error deleting product "+e)}})(r).then((t=>{t?.id==r&&e.target.parentNode.remove()}))}}));const d=e.p+"7d7081bd4e58ad8aeeed.svg",i=e.p+"7d7081bd4e58ad8aeeed.svg",l=e.p+"57fb51bd3c0d216f8d77.svg",s=e.p+"bfe9ee3da5d9adca399a.svg",u=e.p+"986b24e86270651ca1ba.svg";function p(e,t){if(!e||!t)return null;let r=document.createElement("ul");return r.className="footer__links",r.innerHTML=`<li><h3>${e}</h3></li>`,t.forEach((e=>{r.innerHTML=r.innerHTML+`<li>\n        <a href="${e.href}">${e.name}</a>\n      </li>`})),r}const m=document.getElementById("loadMoreProducts"),g=document.getElementById("btnAddProduct"),h=document.getElementById("btnAddNewProduct"),f=document.getElementById("btnCancelNewProduct"),w=document.querySelector(".popup");!function(){const e=document.createElement("header"),t=document.createElement("div"),r=document.createElement("div"),n=document.createElement("nav"),o=document.createElement("div"),a=document.getElementsByTagName("body")[0];e.setAttribute("id","header"),e.className="header",t.className="header__contentWrapper",r.className="header__logo",r.innerHTML=`<img src="${d}" alt="logo">`,n.className="header__nav",n.innerHTML="<ul>\n          <li>Home</li>\n          <li>Shop</li>\n          <li>Our Story</li>\n          <li>Blog</li>\n          <li>Contact Us</li>\n        </ul>",o.className="header__menu",o.innerHTML="Menu items",t.append(r,n,o),e.appendChild(t),a.prepend(e)}(),async function(){try{let e=await async function(){let e="https://fakestoreapi.com/products";isNaN(6)||(e+="?limit=6");try{console.log("Sending fetch request");let t=await fetch(e);if(!t.ok)throw new Error("Network error");console.log("loading data product data");let r=await t.json();return console.log("Product data loaded. ",r),r}catch(e){t("error","Error loading products "+e)}}();console.log(e),e.forEach((e=>{r(e,n),o.push(e)})),async function(e){let r=document.createElement("div");r.className="productList__categories",r.setAttribute("id","productList__categories"),async function(){try{console.log("Sending fetch request for load categories");let e=await fetch("https://fakestoreapi.com/products/categories");if(!e.ok)throw new Error("Network error while loading categories");console.log("Loading categories names");let t=await e.json();return console.log(t),t}catch(e){t("error","Error loading categories "+e)}}().then((e=>function(e,t){let r='<option value="">--Show all products--</option>';e.forEach((e=>{r+=`<option value="${e}">\n        ${e}\n      </option>`}));let n=`<label for="productList__select">\n      Show products filtered by category:\n    </label>\n    <select name="productList__select" id="productList__select">\n      ${r};\n    </select>`;t.innerHTML=n}(e,r))),e.parentNode.prepend(r),r.addEventListener("change",(e=>c("category",e.target.value)))}(n)}catch(e){t("error","error loading data from API "+e)}}(),function(){const e=document.getElementsByTagName("body")[0],t=document.createElement("footer"),r=document.createElement("div"),n=document.createElement("div"),o=document.createElement("div"),a=document.createElement("address"),c=document.createElement("div");a.className="footer__address",a.innerHTML=`\n    <p>\n      <img src=${i} alt="Logo" class="footer__logo">\n    </p>\n    <p>\n      <img src=${s} alt="phone" width=24 height=24>\n      <a href="tel:+1 7045550127">(704) 555-0127</a>\n    </p>\n    <p>\n      <img src=${l} alt="mail" width=24 height=24>\n      <a href="mailto:krist@example.com">krist@example.com</a>\n    </p>\n    <p>\n      <img src=${u} alt="address" width=24 height=24>\n      <span>3891 Ranchview Dr. Richardson, California 62639</span>\n    </p>`,n.className="footer__content";const d=p("Information",[{href:"#",name:"My Account"},{href:"#",name:"Login"},{href:"#",name:"My Cart"},{href:"#",name:"My Wishlist"},{href:"#",name:"Checkout"}]),m=p("Service",[{href:"#",name:"About Us"},{href:"#",name:"Careers"},{href:"#",name:"Delivery Information"},{href:"#",name:"Privacy Policy"},{href:"#",name:"Terms & Conditions"}]);c.className="footer__subscribe",c.innerHTML=`\n    <h3>Subscribe</h3>\n    <p>Enter your email below to be the first to know\n     about new collections and product launches.</p>\n     <div class="footer__subscribe-email">\n      <img src="${l}" width=24 height=24 alt="envelope">\n      <input type="text" placeholder="Your Email">\n      <span>&#8594</span>\n     </div>\n\n  `,n.append(a,d,m,c),t.setAttribute("id","footer"),t.className="footer",r.className="footer__wrapper",r.append(n,o),t.append(r),e.append(t)}(),m.addEventListener("click",(e=>{(function(e){if(console.log("load more products called"),o.length>=20)return;const r=Math.min(6,20-o.length);let n=new Array(r).fill().map(((e,t)=>o.length+t+1));Promise.allSettled(n.map((e=>async function(e){let r=`https://fakestoreapi.com/products/${e}`;try{console.log("Sending fetch request");let e=await fetch(r);if(!e.ok)throw new Error("Network problem. ");console.log("loading product data");let t=await e.json();return console.log("Product data loaded. ",t),t}catch(e){t("error","Error loading products data "+e)}}(e)))).then((t=>{t.forEach((e=>{(!e??"fulfilled"!==e.status)||o.push(e.value)})),c("category",a),o.length<20?(e.removeAttribute("disabled"),e.innerHTML="Load more"):e.innerHTML="No data for loading"})).catch((e=>t("error",e)))})(e.target),e.target.setAttribute("disabled",""),e.target.textContent="Loading..."})),g.addEventListener("click",(()=>{w.style=""})),h.addEventListener("click",(e=>{e.preventDefault();const r=document.forms.newProduct,n={title:r.newProductName.value,category:r.newProductCategory.value,price:r.newProductPrice.value,image:r.newProductImage.value};for(let e in n)if(""===n[e])return void alert("Все поля формы должны быть заполнены");(async function(e){try{let r=await async function(e){const r={method:"POST",body:JSON.stringify(e)};try{console.log("Sending fetch request for adding new product");let e=await fetch("https://fakestoreapi.com/products",r);if(!e.ok)throw new Error("Network error when adding new product");return console.log("Loading server response of adding new product"),await e.json()}catch(e){t("error","Error while adding new product "+e)}}(e);e.id=r.id;let n=o.findIndex((t=>t.id===e.id));-1===n&&(n=o.length),o[n]=e,c("category",a),t("success",`New product <strong>${e.title}</strong> added.`)}catch(e){t("error",e)}})(n),r.newProductName.value="",r.newProductCategory.value="",r.newProductPrice.value="",r.newProductImage.value="",w.style="display:none"})),f.addEventListener("click",(e=>{e.preventDefault();const t=document.forms.newProduct;t.newProductName.value="",t.newProductCategory.value="",t.newProductPrice.value="",t.newProductImage.value="",w.style="display:none"}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,